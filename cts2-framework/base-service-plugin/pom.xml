<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>cts2-framework</artifactId>
		<groupId>edu.mayo.cts2</groupId>
		<version>0.4.9-SNAPSHOT</version>
	</parent>
	<groupId>edu.mayo.cts2.framework</groupId>
	
	<artifactId>base-service-plugin</artifactId>
	<packaging>pom</packaging>

	<properties>
		<develpment.framework.version>${project.parent.version}</develpment.framework.version>
		<webapp.name>webapp-rest</webapp.name>
		<webapp.port>5150</webapp.port>
		<generated.plugin.properties.file>${project.build.directory}/generated/plugin/plugin.properties</generated.plugin.properties.file>
		<plugin.properties.file>${generated.plugin.properties.file}</plugin.properties.file>
		<test.config.dir>${project.build.directory}/testconfigdir</test.config.dir>
		<test.plugins.dir>${project.build.directory}/test-plugins</test.plugins.dir>
	</properties>

	<profiles>
		<profile>
			<id>parent</id>
			<activation>
				<file>
					<exists>${basedir}/marker.file</exists>
				</file>
			</activation>
		</profile>

		<profile>
			<id>child</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>

				<plugins>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
						<version>1.0.1</version>
						<executions>
							<execution>
								<id>enforce-property</id>
								<goals>
									<goal>enforce</goal>
								</goals>
								<configuration>
									<rules>
										<requireProperty>
											<property>service.provider.class</property>
											<message>You must specify a property 'service.provider.class'</message>
										</requireProperty>
									</rules>
									<fail>true</fail>
								</configuration>
							</execution>
						</executions>
					</plugin>
<!--
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.3</version>
						<executions>
							<execution>
								<goals>
									<goal>run</goal>
								</goals>
								<phase>generate-sources</phase>
								<configuration>
									<tasks>
										<property name="output.file" value="${generated.plugin.properties.file}" />
										<property name="projname" value="${project.name}" />
										<property name="ver" value="${project.version}" />
										<property name="service.provider.class" value="${service.provider.class}" />
										<delete file="${output.file}" />
										<touch mkdirs="true" file="${output.file}" />

										<echo file="${output.file}" message="plugin.name = ${projname}${line.separator}" />
										<echo file="${output.file}" append="true" message="plugin.version = ${ver}${line.separator}" />
										<echo file="${output.file}" append="true" message="service.provider.class = ${service.provider.class}" />

										<property name="test.service.properties.output.file" value="${project.build.directory}/testconfigdir/${webapp.name}/service.properties" />
										<delete file="${test.service.properties.output.file}" />
										<touch mkdirs="true" file="${test.service.properties.output.file}" />
										<echo file="${test.service.properties.output.file}" message="service.plugin.name = ${projname}${line.separator}" />
										<echo file="${test.service.properties.output.file}" append="true" message="service.plugin.version = ${ver}" />

									</tasks>
								</configuration>
							</execution>
						</executions>
					</plugin>
-->


				<plugin>
					<groupId>org.apache.felix</groupId>
					<artifactId>maven-bundle-plugin</artifactId>
					<extensions>true</extensions>
					<configuration>
						<instructions>
							<Import-Package>
							!com.sun.*,
							!org.apache.avalon.*,
							!javax.mail.*,
							!javax.jms.*,
							!sun.*,
							!antlr.*,
							edu.mayo.cts2.*,
							edu.mayo.cts2.framework.core.xml,
							com.atlassian.plugin.spring,
							org.springframework.context.config,
							edu.mayo.cts2.framework.model.service.association,
							edu.mayo.cts2.framework.model.service.codesystem,
							edu.mayo.cts2.framework.model.service.codesystemversion,
							edu.mayo.cts2.framework.model.service.conceptdomain,
							edu.mayo.cts2.framework.model.service.conceptdomainbinding,
							edu.mayo.cts2.framework.model.service.entitydescription,
							edu.mayo.cts2.framework.model.service.map,
							edu.mayo.cts2.framework.model.service.mapentry,
							edu.mayo.cts2.framework.model.service.mapversion,
							edu.mayo.cts2.framework.model.service.statement,
							edu.mayo.cts2.framework.model.service.valueset,
							edu.mayo.cts2.framework.model.service.valuesetdefinition,
							*;resolution:=optional
							</Import-Package>
							<Embed-Transitive>true</Embed-Transitive>			
							<Embed-Dependency>*;scope=provided</Embed-Dependency>
							<Spring-Context>*;timeout:=60</Spring-Context>
							<_exportcontents>*</_exportcontents>
<!-- 							<_metatype>*</_metatype> -->
							<_nouses>true</_nouses>
						</instructions>
					</configuration>
				</plugin>

<!-- 					<plugin> -->
<!-- 						<artifactId>maven-assembly-plugin</artifactId> -->
<!-- 						<groupId>org.apache.maven.plugins</groupId> -->
<!-- 						<version>2.2-beta-3</version> -->
<!-- 						<dependencies> -->
<!-- 							<dependency> -->
<!-- 								<groupId>edu.mayo.cts2.framework</groupId> -->
<!-- 								<artifactId>service-plugin-assembly-descriptor</artifactId> -->
<!-- 								<version>${project.parent.version}</version> -->
<!-- 							</dependency> -->
<!-- 						</dependencies> -->
<!-- 						<configuration> -->
<!-- 							<descriptorRefs> -->
<!-- 								<descriptorRef>service-plugin-distribution</descriptorRef> -->
<!-- 							</descriptorRefs> -->
<!-- 						</configuration> -->
<!-- 						<executions> -->
<!-- 							<execution> -->
<!-- 								<id>create-plugin-assembly</id> -->
<!-- 								<phase>pre-integration-test</phase> -->
<!-- 								<goals> -->
<!-- 									<goal>single</goal> -->
<!-- 								</goals> -->
<!-- 							</execution> -->
<!-- 						</executions> -->
<!-- 					</plugin> -->
<!-- 					<plugin> -->
<!-- 						<artifactId>maven-resources-plugin</artifactId> -->
<!-- 						<version>2.5</version> -->
<!-- 						<executions> -->
<!-- 							<execution> -->
<!-- 								<id>copy-resources</id> -->
<!-- 								<phase>pre-integration-test</phase> -->
<!-- 								<goals> -->
<!-- 									<goal>copy-resources</goal> -->
<!-- 								</goals> -->
<!-- 								<configuration> -->
<!-- 									<outputDirectory>${basedir}/target/test-plugins/${project.build.finalName}-${maven.build.timestamp}</outputDirectory> -->
<!-- 									<overwrite>true</overwrite> -->
<!-- 									<resources> -->
<!-- 										<resource> -->
<!-- 											<directory>${basedir}/target/${project.build.finalName}-service-plugin/${project.build.finalName}-plugin</directory> -->
<!-- 										</resource> -->
<!-- 									</resources> -->
<!-- 								</configuration> -->
<!-- 							</execution> -->
<!-- 						</executions> -->
<!-- 					</plugin> -->
 					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>2.2</version>
						<executions>
							<execution>
								<goals>
									<goal>test-jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<configuration>
							<!-- Container configuration -->
							<container>
								<containerId>jetty6x</containerId>
								<type>embedded</type>
								<timeout>120000</timeout>
								<systemProperties>
									<cts2.config.dir>${test.config.dir}</cts2.config.dir>
									<cts2.plugins.dir>${test.plugins.dir}</cts2.plugins.dir>
									<test.context>true</test.context>
								</systemProperties>
							</container>
							<!-- Configuration to use with the container or the deployer -->
							<configuration>
								<deployables>
									<deployable>
										<groupId>edu.mayo.cts2.framework</groupId>
										<artifactId>webapp-rest</artifactId>
										<type>war</type>
										<properties>
											<context>/${webapp.name}</context>
										</properties>
									</deployable>
								</deployables>
								<properties>
									<cargo.servlet.port>${webapp.port}</cargo.servlet.port>
								</properties>
							</configuration>
							<!-- Don't wait, execute the tests after the container is started -->
							<wait>false</wait>
						</configuration>
						<executions>
							<execution>
								<id>start-container</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
        							<timeout>120000</timeout>
      							</configuration>
							</execution>
							<execution>
								<id>stop-container</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>
	</profiles>
	
	<dependencies>
		<dependency>
			<groupId>edu.mayo.cts2.framework</groupId>
			<artifactId>service-plugin-assembly-descriptor</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
							
		<dependency>
			<groupId>edu.mayo.cts2.framework</groupId>
			<artifactId>webapp-rest</artifactId>
			<version>${project.parent.version}</version>
			<scope>test</scope>
			<type>war</type>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.3,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>