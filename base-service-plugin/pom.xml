<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>cts2-framework</artifactId>
		<groupId>edu.mayo.cts2</groupId>
		<version>0.4.9-SNAPSHOT</version>
	</parent>
	<groupId>edu.mayo.cts2.framework</groupId>

	<artifactId>base-service-plugin</artifactId>
	<packaging>pom</packaging>
	
	<name>CTS2 Development Framework Base Service Plugin</name>
	<description>A Parent POM for CTS2 Development Framework Service Plugins (or other types
	of Plugins). NOTE: OSGi Bundling is not handled here. Please consult 
	http://felix.apache.org/site/apache-felix-maven-bundle-plugin-bnd.html for more information 
	on how to construct an OSGi Bundle via Maven.</description>

	<properties>
		<develpment.framework.version>${project.parent.version}</develpment.framework.version>
		<webapp.name>webapp-rest</webapp.name>
		<webapp.port>5150</webapp.port>
		<test.plugin.properties.name>${project.artifactId}.properties</test.plugin.properties.name>
		<test.config.dir>${project.build.directory}/testconfigdir</test.config.dir>
		<test.plugins.dir>${project.build.directory}/test-plugins</test.plugins.dir>
	</properties>

	<profiles>
		<profile>
			<id>parent</id>
			<activation>
				<file>
					<exists>${basedir}/marker.file</exists>
				</file>
			</activation>
		</profile>

		<profile>
			<id>child</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
						<version>2.4</version>
						<executions>
							<execution>
								<id>copy plugins-util</id>
								<phase>package</phase>
								<goals>
									<goal>copy</goal>
								</goals>
								<configuration>
									<artifactItems>
										<artifactItem>
											<groupId>edu.mayo.cts2.framework</groupId>
											<artifactId>plugin-util</artifactId>
											<version>${project.parent.version}</version>
											<type>jar</type>
											<overWrite>true</overWrite>
											<outputDirectory>${test.plugins.dir}</outputDirectory>
										</artifactItem>
									</artifactItems>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.5</version>
						<executions>
							<execution>
								<id>copy-plugin-bundle</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${test.plugins.dir}</outputDirectory>
									<resources>
										<resource>
											<directory>${project.build.directory}</directory>
											<includes>
												<include>${project.build.finalName}.jar</include>
											</includes>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<version>2.2</version>
						<executions>
							<execution>
								<goals>
									<goal>test-jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<version>2.5</version>
						<executions>
							<execution>
								<id>copy-test-properties-file</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${test.config.dir}/${webapp.name}</outputDirectory>
									<resources>
										<resource>
											<directory>${basedir}/src/test/resources</directory>
											<includes>
												<include>${test.plugin.properties.name}</include>
											</includes>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>

					<plugin>
						<groupId>org.codehaus.cargo</groupId>
						<artifactId>cargo-maven2-plugin</artifactId>
						<version>1.0</version>
						<configuration>
							<!-- Container configuration -->
							<container>
								<containerId>jetty6x</containerId>
								<type>embedded</type>
								<timeout>120000</timeout>
								<systemProperties>
									<cts2.config.dir>${test.config.dir}</cts2.config.dir>
									<cts2.plugins.dir>${test.plugins.dir}</cts2.plugins.dir>
								</systemProperties>
							</container>
							<!-- Configuration to use with the container or the deployer -->
							<configuration>
								<deployables>
									<deployable>
										<groupId>edu.mayo.cts2.framework</groupId>
										<artifactId>webapp-rest</artifactId>
										<type>war</type>
										<properties>
											<context>/${webapp.name}</context>
										</properties>
									</deployable>
								</deployables>
								<properties>
									<cargo.servlet.port>${webapp.port}</cargo.servlet.port>
								</properties>
							</configuration>
							<!-- Don't wait, execute the tests after the container is started -->
							<wait>false</wait>
						</configuration>
						<executions>
							<execution>
								<id>start-container</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>start</goal>
								</goals>
								<configuration>
									<timeout>120000</timeout>
								</configuration>
							</execution>
							<execution>
								<id>stop-container</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencies>
		<dependency>
			<groupId>edu.mayo.cts2.framework</groupId>
			<artifactId>webapp-rest</artifactId>
			<version>${project.parent.version}</version>
			<scope>provided</scope>
			<type>war</type>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.apache.maven.plugins
										</groupId>
										<artifactId>
											maven-antrun-plugin
										</artifactId>
										<versionRange>
											[1.3,)
										</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>